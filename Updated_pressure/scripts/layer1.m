%  layer1.m                   T.L.Szabo    Version 2 January 2015          
% calculates pressure levels in and on boundaries  of  a layer 
% two semi-infinite media with impedances  z1 and z3 bound a layer with
%  an impedance z3 ata  frequency fc (Hz)
% T. L. Szabo February 2018  tlszabo@bu.edu
close all
clear

% scanning parameters
centerFrequency=5.e6;  % center frequency

% physical properties of layer 2
speedSound=3.e3;    % layer sound speed  (m/s) in the 2nd layer
layerThickness=9.0e-4;  % layer length  (m)

% simulation setting
nt=256;               %  number of time points
f0=speedSound/(2*layerThickness); % resonance frequency (MHz)

%  loading conditions / acoustic impedance
Z1=1.e6;     % line impedance (Rayls) of 1st layer
Z2=3.e6;     % line impedance (Rayls) of 2nd layer
Z3=9.e6;     % load impedance (Rayls) of 3rd layer

% discrete thickness (dd) representation of layer 2 by nt(256) number of points.
del = layerThickness/(nt-1);
dd = del*(0:nt-1);

% Angular Wavenumber
k = 2*pi*centerFrequency/speedSound; % unit: rad/m
% Wavelength
lambda = speedSound/centerFrequency; % unit: m

k2d = k*dd;     % distance from end to front (medium 3 to medium 1)

rf3 = (Z3-Z2)/(Z3+Z2);
tf3 = 2*Z3/(Z3+Z2);

p2 = exp(1i*k2d)+rf3.*exp(-1i*k2d);   % pressure in layer
u2 = exp(1i*k2d)-rf3.*exp(-1i*k2d);   %  particle  velocity in layer

zin2=Z2*p2./u2;
p1r=(zin2-Z1*ones(size(dd)))./(zin2+Z1*ones(size(dd)));  % reflected in 1
p2t=2*zin2./(zin2+Z1*ones(size(dd)));  % transmitted into 2 
p1r0=p1r(nt);           % reflected in 1 at z=0
p2t0=p2t(nt);           % transmitted into 2 at z=0
p3td=p2(1)*tf3;         % transmitted into 3 at z=d

dlambda=layerThickness/lambda;        %  layer thickness in wavelengths



% Forward
dd_forward = dd(end:-1:1);
k2d2= k*dd_forward; % distance from front to end: 1 to 3

pressure = abs(p2);

figure;               %  plot results
plot(k2d2,pressure,'r',0,abs(p1r0),'g',0,abs(p2t0),'b',k2d2(1),abs(p3td)...
    ,'m');
title('pressure p2 plus  boundary  values ');
xlabel('kd');
figure;               %  plot results
plot(k2d2,pressure,'r');
title('pressure p2');
xlabel('kd');


hotColor = [ 0.0417         0         0 ;...
    0.0833         0         0;...
    0.1250         0         0;...
    0.1667         0         0;...
    0.2083         0         0;...
    0.2500         0         0;...
    0.2917         0         0;...
    0.3333         0         0;...
    0.3750         0         0;...
    0.4167         0         0;...
    0.4583         0         0;...
    0.5000         0         0;...
    0.5417         0         0;...
    0.5833         0         0;...
    0.6250         0         0;...
    0.6667         0         0;...
    0.7083         0         0;...
    0.7500         0         0;...
    0.7917         0         0;...
    0.8333         0         0;...
    0.8750         0         0;...
    0.9167         0         0;...
    0.9583         0         0;...
    1.0000         0         0;...
    1.0000    0.0417         0;...
    1.0000    0.0833         0;...
    1.0000    0.1250         0;...
    1.0000    0.1667         0;...
    1.0000    0.2083         0;...
    1.0000    0.2500         0;...
    1.0000    0.2917         0;...
    1.0000    0.3333         0;...
    1.0000    0.3750         0;...
    1.0000    0.4167         0;...
    1.0000    0.4583         0;...
    1.0000    0.5000         0;...
    1.0000    0.5417         0;...
    1.0000    0.5833         0;...
    1.0000    0.6250         0;...
    1.0000    0.6667         0;...
    1.0000    0.7083         0;...
    1.0000    0.7500         0;...
    1.0000    0.7917         0;...
    1.0000    0.8333         0;...
    1.0000    0.8750         0;...
    1.0000    0.9167         0;...
    1.0000    0.9583         0;...
    1.0000    1.0000         0;...
    1.0000    1.0000    0.0625;...
    1.0000    1.0000    0.1250;...
    1.0000    1.0000    0.1875;...
    1.0000    1.0000    0.2500;...
    1.0000    1.0000    0.3125;...
    1.0000    1.0000    0.3750;...
    1.0000    1.0000    0.4375;...
    1.0000    1.0000    0.5000;...
    1.0000    1.0000    0.5625;...
    1.0000    1.0000    0.6250;...
    1.0000    1.0000    0.6875;...
    1.0000    1.0000    0.7500;...
    1.0000    1.0000    0.8125;...
    1.0000    1.0000    0.8750;...
    1.0000    1.0000    0.9375;...
    1.0000    1.0000    1.0000];

% linear conversion, map pressure to values between 1-50
% val = coeff(1) * pressure + coeff(2)

coeff = [0 0]; % [slope intercept]
coeff(1) = 49/(max(pressure)-min(pressure));
coeff(2) = 1 - coeff(1)*min(pressure);
val = round(coeff(1) * pressure + coeff(2));

colorMat = zeros(256,256,3);
for m = 1:256
    for n = 1:256
        colorMat(m,n,:) = hotColor(val(m),:);
    end
end
